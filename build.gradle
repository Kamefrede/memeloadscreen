buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
        maven { url = 'https://dist.creeper.host/Sponge/maven' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

mixin {
    add sourceSets.main, "memeloadscreen.refmap.json"
}
ext.configFile = file('build.properties')
ext.config = parseConfig(configFile)
version = "${config.mod_version}"
group = "xyz.${config.mod_author}.${config.mod_name}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${config.mod_id}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: "${config.mcp_version}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')

            properties 'forge.logging.console.level': 'debug'
            properties 'fml.earlyprogresswindow': 'false'
            properties 'mixin.env.disableRefMap': 'true'
            mods {
                memeloadscreen {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${config.mc_version}-${config.forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8'
    annotationProcessor 'com.google.code.gson:gson:2.8.0'
    annotationProcessor 'com.google.guava:guava:21.0'
    annotationProcessor 'org.ow2.asm:asm-tree:7.2'
    annotationProcessor 'org.ow2.asm:asm-commons:7.2'
    annotationProcessor 'org.ow2.asm:asm-util:7.2'
}

jar {
    manifest {
        attributes([
                "Specification-Title": "${config.mod_name}",
                "Specification-Vendor": "${config.mod_author}",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${config.mod_version}",
                "Implementation-Vendor" :"${config.mod_author}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConnector": "xyz.kamefrede.memeloadscreen.MixinConnector"
        ])
    }
}

def parseConfig(File config) {
    if(config.exists()){
        config.withReader {
            def prop = new Properties()
            prop.load(it)
            return (new ConfigSlurper().parse(prop))
        }
    } else {
        return null
    }
}